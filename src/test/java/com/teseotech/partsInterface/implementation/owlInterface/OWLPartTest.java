package com.teseotech.partsInterface.implementation.owlInterface;

import com.teseotech.partsInterface.implementation.Part;
import com.teseotech.partsInterface.implementation.kernel.Range;
import com.teseotech.partsInterface.utility.Configurer;
import com.teseotech.partsInterface.utility.StaticLogger;
import it.emarolab.amor.owlInterface.OWLReferences;
import org.junit.jupiter.api.Test;

import java.util.*;

// It tests the definition of a `Part` in the ontology, and
// it defines each required `Feature` in the ontology as well.
public class OWLPartTest {
    public static Set<OWLFeature<?>> getFeatures(OWLReferences ontoRef) {
        // Define some features (shared to all parts for simplicity).
        Set<OWLFeature<?>> features = new HashSet<>();
        features.add(new OWLRangeFeature("hasFeature1", new Range(2,3), ontoRef));
        features.add(new OWLFeature<>("hasFeature2", 2L, ontoRef));
        features.add(new OWLFeature<>("hasFeature3", 3f, ontoRef));
        features.add(new OWLFeature<>("hasFeature4", "F4", ontoRef));
        features.add(new OWLFeature<>("hasFeature5", true, ontoRef));
        return features;
    }

    @Test
    void addRemovePart() {
        StaticLogger.setLevel(StaticLogger.VERBOSE);

        OWLReferences ontology = Configurer.createOntology(OWLPartTest.class.getSimpleName(), Configurer.ONTO_TEST_FILE_PATH);
        Set<OWLFeature<?>> featurs = getFeatures(ontology);

        // Define some parts with autogenerated ID. They might add features (see check logs).
        OWLPart p0 = new Part("MOTOR", featurs, ontology);
        OWLPart p1 = new Part("MOTOR", featurs, ontology);
        OWLPart p2 = new Part("PIPE", featurs, ontology);

        p0.removeInstance(); // Attempt to remove a not existing part from the ontology (a warning should occur).
        p0.addInstance(); // Add a feature to the ontology.
        p1.addInstance(); // Add another part to the ontology.
        p1.addInstance(); // Attempt to add an already existing part to an ontology (a warning should occur).
        p0.removeInstance(); // Remove a part from the ontology.

        p2.addInstance(); // Add another part to the ontology.
        // Remove a part from the ontology given its identifier.
        String p3InstanceName = p2.getID();
        OWLPart.removeInstance(p3InstanceName, ontology);
        System.out.println("INFO: removing part with name " + p3InstanceName + '.');

        ontology.synchronizeReasoner(); // Apply changes and infer possible conclusions.

        ontology.saveOntology();
        System.out.println("INFO: Ontology saved in " + ontology.getOntologyPath() + ". " +
                "You should check that it represents only the '" + p1.getID() + "' part.");
    }

    /*@Test
    public void createIdentifier(){
        for(int i = 0; i < 100; i++)
            System.out.println(BasePart.createIdentifier());
    }*/
}